#!/usr/bin/perl -w

use Getopt::Std;

$0=~/.*\/(.*)/;


#======================
# Read arguments.
#======================
my %options = ();

getopts("r:c:b:k:g",\%options);

die "\nUsage: $1 [-r nrow] [-c ncol] [-b blk] [-k coll,col2,..] <txt file> \n\n" if @ARGV>1;


# minimum number of rows to be interested
my $minrow = 2; 

if ( defined $options{r} ) {
    $minrow = $options{r};
}

# minimum number of columns to be interested
my $mincol = 2;
if ( defined $options{c} ) {
    $mincol = $options{c};
}

# the picked block
my $picked = 0;
if ( defined $options{b} ) {
    $picked = $options{b};
}

# columns to be output
my @col_nums = ();

if (defined $options{k}) {
    @col_nums = split(",", $options{k});
}


#======================
# Main           
#======================

# Read file content
my @contents = <>;
chomp @contents;

# Add a blank line to file conetent for simpler code
push @contents," ";


#Initialize some parameters
my $blk_num = 0;
my $ncol    = 0;
my @block   = ();
my @block_list = ();
my @col_ref_list = ();


#Process file
for (@contents) {

    # split current line into columns 
    my @items = split(" ", $_);

    # If new row's number of columns is different from
    # previous row that means it's the beginning of a new block
    if (@items != $ncol) {
        
        # See if the current block is worth printing
        if ($ncol>= $mincol && @block >= $minrow ) {

            # print "$blk_num\n";
            # print_block(\@block, \@col_nums);

            # push block to block_list
            push @block_list, [@block]; 

            #update block number
            $blk_num = $blk_num + 1;
        }

        # Clear block for a new block
        @block = ();

        # Push first row to the new block
        push @block, [@items];

        # Record current number of columns
        $ncol = @items;

    } 

    # If new row's # of col still the same
    # push new row to the block
    else {
        push @block, [@items];
    }
}


# Print Blocks
if (defined $options{b}) {
    print_block($block_list[$picked],\@col_nums);
}
else {
    for (my $i=0; $i<=$blk_num-1; $i++) {
        my $blk_ref = $block_list[$i];
        print "$i\n";
        print_block(\@$blk_ref,[]);
    }
}


#==============================
# Print block subroutine
#==============================
sub print_block {

    my ($tabref, $nc_ref) = @_;

    for (@$tabref) {

        my $row_ref = $_;

        if (@$nc_ref >0 ) {
            for (@$nc_ref) { print ${$row_ref}[$_-1]." "; }
        } else {
            for (@{$row_ref}) { print $_." "; }
        }

        print "\n";
    }
}

